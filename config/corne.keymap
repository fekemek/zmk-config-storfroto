/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        Alfa {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC          &kp Q  &kp W  &kp E          &kp R  &kp T            &kp Y      &kp U        &kp I      &kp O      &kp P          &kp LEFT_BRACKET
&kp TAB          &kp A  &kp S  &kp D          &kp F  &kp G            &kp H      &kp J        &kp K      &kp L      &kp SEMICOLON  &kp SINGLE_QUOTE
&kp RIGHT_SHIFT  &kp Z  &kp X  &kp C          &kp V  &kp B            &kp N      &kp M        &kp SLASH  &kp COMMA  &kp PERIOD     &kp BACKSPACE
                               &kp RIGHT_GUI  &mo 1  &kp BACKSPACE    &kp SPACE  &lt 2 ENTER  &kp RALT
            >;
        };

        Pil {
            bindings = <
&kp ESCAPE       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4       &kp N5                        &kp LS(LEFT_ALT)  &none            &kp UP_ARROW     &none      &kp RG(A)  &kp RG(F)
&kp TAB          &kp NUMBER_6  &kp N7        &kp N8        &kp N9             &mt RS(RIGHT_ALT) NUMBER_0    &kp RIGHT_SHIFT   &kp LEFT         &kp DOWN         &kp RIGHT  &kp RG(C)  &kp RG(V)
&kp RIGHT_SHIFT  &kp GRAVE     &kp MINUS     &kp EQUAL     &kp RIGHT_BRACKET  &kp BACKSLASH                 &kp RIGHT_ALT     &kp NON_US_BSLH  &kp NON_US_HASH  &kt LCTRL  &kp RG(X)  &kp RG(Z)
                                             &kp LSHFT     &mo 1              &kp BACKSPACE                 &kp SPACE         &lt 3 ENTER      &kp LEFT_ALT
            >;
        };

        layer_2 {
            bindings = <
&kp ESCAPE       &kp RS(NUMBER_1)  &kp RS(NUMBER_2)  &kp RS(NUMBER_3)  &kp RS(NUMBER_4)       &kp RS(N5)           &kp RG(X)  &kp C_BRI_UP  &kp RG(SPACE)     &kp C_BRI_UP  &kp RG(R)  &kp RG(RS(T))
&kp TAB          &kp RS(NUMBER_6)  &kp RS(N7)        &kp RS(N8)        &kp RS(N9)             &kp RS(N0)           &kp RG(C)  &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT    &kp RG(W)  &kp RG(T)
&kp RIGHT_SHIFT  &kp RS(GRAVE)     &kp RS(MINUS)     &kp RS(EQUAL)     &kp RS(RIGHT_BRACKET)  &kp RS(BACKSLASH)    &kp RG(V)  &kp C_VOL_DN  &kp C_VOLUME_UP   &kt C_MUTE    &none      &none
                                                     &kp LEFT_GUI      &mo 3                  &kp DEL              &kp SPACE  &lt 0 ENTER   &kp LEFT_ALT
            >;
        };

        layer_3 {
            bindings = <
&none  &bt BT_CLR_ALL  &bt BT_PRV  &bt BT_NXT  &none   &none    &none  &none   &none  &none  &none  &none
&none  &none           &none       &none       &none   &none    &none  &none   &none  &none  &none  &none
&none  &none           &none       &none       &none   &none    &none  &none   &none  &none  &none  &none
                                   &none       &trans  &none    &none  &trans  &none
            >;
        };
    };
};
