/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        iOS_Shift: iOS_Shift {
            compatible = "zmk,behavior-tap-dance";
            label = "IOS_SHIFT";
            #binding-cells = <0>;
            bindings = <&sk LSHIFT>, <&kt LSHIFT>;
        };

        OptBsp: OptBsp {
            compatible = "zmk,behavior-tap-dance";
            label = "OPTBSP";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp LA(BACKSPACE)>;
        };

        HodlShift: HodlShift {
            compatible = "zmk,behavior-tap-dance";
            label = "HODLSHIFT";
            #binding-cells = <0>;
            bindings = <&sk LSHIFT>, <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Alfa {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC     &kp Q  &kp W  &kp E  &kp R     &kp T           &kp Y         &kp U      &kp I        &kp O      &kp P          &kp LEFT_BRACKET
&kp TAB     &kp A  &kp S  &kp D  &kp F     &kp G           &kp H         &kp J      &kp K        &kp L      &kp SEMICOLON  &kp SINGLE_QUOTE
&iOS_Shift  &kp Z  &kp X  &kp C  &kp V     &kp B           &kp N         &kp M      &kp SLASH    &kp COMMA  &kp PERIOD     &kp BACKSPACE
                          &mo 1  &kp BSPC  &kp LEFT_GUI    &kp LEFT_ALT  &kp SPACE  &lt 2 ENTER
            >;
        };

        Pil {
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4       &kp N5                        &kp LS(LEFT_ALT)  &none            &kp UP_ARROW     &none      &kp RG(A)  &kp RG(F)
&trans  &kp NUMBER_6  &kp N7        &kp N8        &kp N9             &mt RS(RIGHT_ALT) NUMBER_0    &kp RIGHT_SHIFT   &kp LEFT         &kp DOWN         &kp RIGHT  &kp RG(C)  &kp RG(V)
&trans  &kp GRAVE     &kp MINUS     &kp EQUAL     &kp RIGHT_BRACKET  &kp BACKSLASH                 &kp RIGHT_ALT     &kp NON_US_BSLH  &kp NON_US_HASH  &kt LCTRL  &kp RG(X)  &kp RG(Z)
                                    &trans        &trans             &trans                        &trans            &trans           &lt 3 ENTER
            >;
        };

        layer_2 {
            bindings = <
&trans  &kp RS(NUMBER_1)  &kp RS(NUMBER_2)  &kp RS(NUMBER_3)  &kp RS(NUMBER_4)       &kp RS(N5)           &kp RG(X)  &kp C_BRI_DEC  &kp RG(SPACE)     &kp C_BRI_UP  &kp RG(R)  &kp RG(RS(T))
&trans  &kp RS(NUMBER_6)  &kp RS(N7)        &kp RS(N8)        &kp RS(N9)             &kp RS(N0)           &kp RG(C)  &kp C_PREV     &kp C_PLAY_PAUSE  &kp C_NEXT    &kp RG(W)  &kp RG(T)
&trans  &kp RS(GRAVE)     &kp RS(MINUS)     &kp RS(EQUAL)     &kp RS(RIGHT_BRACKET)  &kp RS(BACKSLASH)    &kp RG(V)  &kp C_VOL_DN   &kp C_VOLUME_UP   &kt C_MUTE    &none      &none
                                            &mo 3             &kp DELETE             &trans               &trans     &trans         &lt 0 ENTER
            >;
        };

        layer_3 {
            bindings = <
&none  &bt BT_CLR_ALL  &bt BT_PRV    &bt BT_NXT    &none   &none        &none  &none   &none  &none  &none  &none
&none  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &none   &kp GLOBE    &none  &none   &none  &none  &none  &none
&none  &bt BT_CLR      &iOS_Shift    &OptBsp       &none   &none        &none  &none   &none  &none  &none  &none
                                     &none         &trans  &none        &none  &trans  &none
            >;
        };

        Kvikk {
            bindings = <
&trans  &kp X  &kp C  &kp O     &kp APOS  &kp U     &kp H   &kp K   &kp M      &kp B    &kp J    &kp W
&trans  &kp L  &kp R  &kp A     &kp E     &kp I     &kp D   &kp T   &kp N      &kp S    &kp G    &kp V
&trans  &kp Q  &kp Z  &kp LBKT  &kp SEMI  &kp Y     &kp F   &kp P   &kp SLASH  &kp DOT  &kp DOT  &trans
                      &trans    &trans    &trans    &trans  &trans  &trans
            >;
        };
    };
};
